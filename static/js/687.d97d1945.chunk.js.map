{"version":3,"file":"static/js/687.d97d1945.chunk.js","mappings":"wQACA,EAAuB,wBAAvB,EAAsD,wB,SC0CtD,EAtCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaJ,GAFlB,QAEVF,EAFU,QAGLO,OAAS,GAClBN,EAAUD,GAJI,gDAOhBQ,IAAAA,OAAAA,QAAA,MAPgB,yDAAH,qDAUjBH,GACD,GAAE,CAACH,KAEF,8BACE,eAAIO,UAAWC,EAAf,SACGV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,GAAIC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACV,gBAAIN,UAAWC,EAAf,UACGE,IACC,gBACEI,IAAG,yCAAoCJ,GACvCK,IAAI,QACJC,MAAO,GACPC,OAAQ,OAIZ,uBAAIL,KACJ,uCAAeC,OAXaF,EADpB,OAkBnB,C,8LCzCKO,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFZ,cAC1BG,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,qDAOlBC,EAAa,mCAAG,WAAMC,GAAN,uFACJL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCO,EADhC,YADI,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAObG,EAAY,mCAAG,WAAM3B,GAAN,uFACHqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAlB,EADA,oBACmBmB,IAFhB,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAMZnB,EAAY,mCAAG,WAAMJ,GAAN,uFACHqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAlB,EADA,4BAC2BmB,IAFxB,cACpBG,EADoB,yBAInBA,EAASC,KAAKK,MAJK,2CAAH,sDAMZC,EAAY,mCAAG,WAAM7B,GAAN,uFACHqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAlB,EADA,4BAC2BmB,IAFxB,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/CastStyle.module.css?6dd6","components/Cast/Cast.jsx","components/fetchFunctions.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastStyle_list__wHXi1\",\"item\":\"CastStyle_item__2B2Hq\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { fetchCredits } from '../fetchFunctions';\nimport css from './CastStyle.module.css';\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        const actors = await fetchCredits(movieId);\n        if (actors.length > 0) {\n          setActors(actors);\n        }\n      } catch (error) {\n        Notiflix.Notify.failure(error);\n      }\n    };\n    fetchActors();\n  }, [movieId]);\n  return (\n    <section>\n      <ul className={css.list}>\n        {actors.map(({ profile_path, id, name, character }) => (\n          <li className={css.item} key={id}>\n            {profile_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt=\"Actor\"\n                width={80}\n                height={110}\n              />\n            )}\n\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7432f01d7cccbefe000838c110a92cf9';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchBySearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const fetchCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["useState","actors","setActors","movieId","useParams","useEffect","fetchActors","fetchCredits","length","Notiflix","className","css","map","profile_path","id","name","character","src","alt","width","height","BASE_URL","API_KEY","fetchPopularMovies","axios","response","data","results","fetchBySearch","query","fetchDetails","cast","fetchReviews"],"sourceRoot":""}