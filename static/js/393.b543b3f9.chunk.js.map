{"version":3,"file":"static/js/393.b543b3f9.chunk.js","mappings":"8SACMA,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFZ,cAC1BG,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,qDAOlBC,EAAa,mCAAG,WAAMC,GAAN,uFACJL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCO,EADhC,YADI,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAObG,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACmBT,IAFhB,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAMZM,EAAY,mCAAG,WAAMD,GAAN,uFACHP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BAC2BT,IAFxB,cACpBG,EADoB,yBAInBA,EAASC,KAAKO,MAJK,2CAAH,sDAMZC,EAAY,mCAAG,WAAMH,GAAN,uFACHP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BAC2BT,IAFxB,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,2GC7BzB,EAAwB,2BAAxB,EAA0D,0BAA1D,EAA0F,yB,SCiB1F,EAjBoB,SAAC,GAAmC,IAAjCQ,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtC,OACE,kBAAMD,SAAUA,EAAUE,UAAWC,EAArC,WACE,kBACED,UAAWC,EACXC,KAAK,OACLC,KAAK,QACLC,YAAY,oBACZP,MAAOA,EACPE,SAAU,SAAAM,GAAC,OAAIN,EAASM,EAAEC,OAAOT,MAAtB,KAEb,mBAAQG,UAAWC,EAASC,KAAK,SAAjC,sBAKL,E,qDChBD,EAAuB,0BAAvB,EAAwD,0BCgExD,EA3De,WAAO,IAAD,EACnB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC/C,GAAsCC,EAAAA,EAAAA,UAASF,GAAwB,IAAvE,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,OAWjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gGAEXP,EAFW,kEAKKvB,EAAAA,EAAAA,GAAcuB,GALnB,OAKVE,EALU,OAMhBC,EAAUD,GANM,gDAQhBM,IAAAA,OAAAA,QAAA,MARgB,yDAAH,qDAWjBD,GACD,GAAE,CAACP,IAEJ,IAAMS,EAAoB,SAAA/B,GAExBkB,EAD6B,KAAVlB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,EAED,OACE,4BACE,0BACE,SAAC,EAAD,CAAaO,SAhCE,SAAAO,GACnBA,EAAEkB,iBACF,IAAMC,EAAOnB,EAAEC,OACI,KAAfkB,EAAK3B,QACTiB,EAAeJ,GACfY,EAAkBZ,GAClBc,EAAKC,QACN,EAyB0C1B,SAAUuB,OAEjD,eAAItB,UAAWC,EAAf,SACGc,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CACE5B,UAAWC,EACX4B,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMd,GAHjB,SAKGW,KANID,EADC,QAcnB,C","sources":["components/fetchFunctions.jsx","webpack://react-homework-template/./src/components/SearchInput/SearchInput.module.css?3e06","components/SearchInput/SearchInput.jsx","webpack://react-homework-template/./src/pages/MoviesStyle.module.css?7553","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7432f01d7cccbefe000838c110a92cf9';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchBySearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const fetchCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchInput_input__pvo3q\",\"form\":\"SearchInput_form__5l7m6\",\"btn\":\"SearchInput_btn__+jAoV\"};","import css from './SearchInput.module.css';\nconst SearchInput = ({ value, onSubmit, onChange }) => {\n  return (\n    <form onSubmit={onSubmit} className={css.form}>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"query\"\n        placeholder=\"Search your movie\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <button className={css.btn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\nexport default SearchInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesStyle_list__OTtfq\",\"link\":\"MoviesStyle_link__RFQ6Z\"};","import SearchInput from 'components/SearchInput/SearchInput';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchBySearch } from 'components/fetchFunctions';\nimport Notiflix from 'notiflix';\nimport css from './MoviesStyle.module.css';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const [searchQuery, setSearchQuery] = useState(movieName ? movieName : '');\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    if (form.value === '') return;\n    setSearchQuery(movieName);\n    updateQueryString(movieName);\n    form.reset();\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        if (!searchQuery) {\n          return;\n        }\n        const movies = await fetchBySearch(searchQuery);\n        setMovies(movies);\n      } catch (error) {\n        Notiflix.Notify.failure(error);\n      }\n    };\n    fetchMovies();\n  }, [searchQuery]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div>\n      <div>\n        <SearchInput onSubmit={handleSubmit} onChange={updateQueryString} />\n      </div>\n      <ul className={css.list}>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link\n              className={css.link}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","axios","response","data","results","fetchBySearch","query","fetchDetails","movieId","fetchCredits","cast","fetchReviews","value","onSubmit","onChange","className","css","type","name","placeholder","e","target","useSearchParams","searchParams","setSearchParams","movieName","get","useState","searchQuery","setSearchQuery","movies","setMovies","location","useLocation","useEffect","fetchMovies","Notiflix","updateQueryString","preventDefault","form","reset","map","id","title","to","state","from"],"sourceRoot":""}