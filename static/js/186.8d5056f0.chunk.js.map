{"version":3,"file":"static/js/186.8d5056f0.chunk.js","mappings":"2OAqCA,UAjCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEMC,EAAAA,EAAAA,IAAaJ,GAFnB,OAEVF,EAFU,OAGhBC,EAAWD,GAHK,gDAKhBO,IAAAA,OAAAA,QAAA,MALgB,yDAAH,qDAQjBF,GACD,GAAE,CAACH,KAGF,8BACE,0BACG,IACAF,EAAQQ,OAAS,EAChBR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADC,KAOZ,wEAKT,C,8LCnCKG,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFZ,cAC1BG,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,qDAOlBC,EAAa,mCAAG,WAAMC,GAAN,uFACJL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCO,EADhC,YADI,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAObG,EAAY,mCAAG,WAAMpB,GAAN,uFACHc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAX,EADA,oBACmBY,IAFhB,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAMZK,EAAY,mCAAG,WAAMrB,GAAN,uFACHc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAX,EADA,4BAC2BY,IAFxB,cACpBG,EADoB,yBAInBA,EAASC,KAAKM,MAJK,2CAAH,sDAMZlB,EAAY,mCAAG,WAAMJ,GAAN,uFACHc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAX,EADA,4BAC2BY,IAFxB,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/fetchFunctions.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { fetchReviews } from '../fetchFunctions';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const reviews = await fetchReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        Notiflix.Notify.failure(error);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul>\n        {' '}\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ul>\n    </section>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7432f01d7cccbefe000838c110a92cf9';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchBySearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const fetchCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovies","fetchReviews","Notiflix","length","map","id","author","content","BASE_URL","API_KEY","fetchPopularMovies","axios","response","data","results","fetchBySearch","query","fetchDetails","fetchCredits","cast"],"sourceRoot":""}